# -*- coding: utf-8 -*-
"""
/***************************************************************************
 QRiSDockWidget
                                 A QGIS plugin
 QGIS Riverscapes Studio (QRiS)
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2021-05-06
        git sha              : $Format:%H$
        copyright            : (C) 2021 by North Arrow Research
        email                : info@northarrowresearch.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import sqlite3
from datetime import date
from PyQt5 import QtCore, QtGui, QtWidgets
from qgis import core, gui, utils

from .frm_analysis_properties import FrmAnalysisProperties

# from qgis.core import QgsMapLayer
# from qgis.gui import QgsDataSourceSelectDialog
# from qgis.utils import iface

from ..model.project import Project
from ..model.mask import MASK_MACHINE_CODE
from ..model.analysis import ANALYSIS_MACHINE_CODE, Analysis
from ..model.analysis_metric import AnalysisMetric
from ..model.db_item import DB_MODE_CREATE, DB_MODE_IMPORT, DBItem, DBItemModel
from ..model.event import EVENT_MACHINE_CODE, Event
from ..model.basemap import BASEMAP_MACHINE_CODE, Raster
from ..model.mask import MASK_MACHINE_CODE, Mask
from ..model.metric_value import MetricValue, load_metric_values

from .frm_metric_value import FrmMetricValue

from ..gp.stream_gage_discharge_task import StreamGageDischargeTask

# https://stackoverflow.com/questions/31406193/matplotlib-is-not-worked-with-qgis
# from matplotlib.backends.backend_qt4agg import FigureCanvasQTAgg as FigureCanvas
# import matplotlib.pyplot as plt

import matplotlib as mpl
# mpl.use('Qt4Agg')  # or mpl.use('agg')
# import matplotlib.pyplot as plt

# from matplotlib.figure import Figure
# from matplotlib import axes


class FrmStreamGageDocWidget(QtWidgets.QDockWidget):

    def __init__(self, project: Project, parent=None):

        super(FrmStreamGageDocWidget, self).__init__(parent)
        self.project = project
        self.setupUi()
        self.load_stream_gages()

    def load_stream_gages(self):

        conn = sqlite3.connect(self.project.project_file)
        curs = conn.cursor()
        curs.execute('SELECT fid, site_name, site_code FROM stream_gages')
        self.stream_gage_model = QtGui.QStandardItemModel()
        for row in curs.fetchall():
            item = QtGui.QStandardItem(row[1])
            item.setData((row[0], row[2]), QtCore.Qt.UserRole)
            self.stream_gage_model.appendRow(item)

        self.lst_gages.setModel(self.stream_gage_model)

    def download_discharges(self):

        site_id, site_code = self.stream_gage_model.itemFromIndex(self.lst_gages.currentIndex()).data(QtCore.Qt.UserRole)

        start = date(2020, 1, 1)
        end = date(2022, 10, 1)

        task = StreamGageDischargeTask(self.project.project_file, site_code, site_id, start, end)
        task.run()

    def setupUi(self):

        self.setWindowTitle('Stream Gage Explorer')
        self.dockWidgetContents = QtWidgets.QWidget()

        self.main_horiz = QtWidgets.QHBoxLayout(self.dockWidgetContents)

        self.lst_gages = QtWidgets.QListView()
        self.lst_gages.setMaximumWidth(200)
        self.main_horiz.addWidget(self.lst_gages)

        self.right_vert = QtWidgets.QVBoxLayout()
        self.main_horiz.addLayout(self.right_vert)

        self.button_horiz = QtWidgets.QHBoxLayout()
        self.right_vert.addLayout(self.button_horiz)

        self.dtStart = QtWidgets.QDateEdit()
        self.button_horiz.addWidget(self.dtStart)

        self.dtEnd = QtWidgets.QDateEdit()
        self.button_horiz.addWidget(self.dtEnd)

        self.cmdDownload = QtWidgets.QPushButton()
        self.cmdDownload.setText('Download Discharge')
        self.cmdDownload.clicked.connect(self.download_discharges)
        self.button_horiz.addWidget(self.cmdDownload)

        self.cmdExport = QtWidgets.QPushButton()
        self.cmdExport.setText('Export')
        self.button_horiz.addWidget(self.cmdExport)

        # self.spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)

        # self.spacer = QtWidgets.QSpacerItem(1, 1)
        # self.right_vert.addWidget(self.spacer)

        # https://gis.stackexchange.com/questions/277873/matplotlib-integration-in-qgis
        # https://gis.stackexchange.com/questions/97254/problem-with-matplotlib-when-installing-qgis-on-mac

        # self.figure = Figure(facecolor='white')

        # plt.scatter([1, 2, 3], [2, 5, 8], c='#DA8044', alpha=0.5)

        self.vwGraph = QtWidgets.QGraphicsView()
        self.right_vert.addWidget(self.vwGraph)
        self.scene = QtWidgets.QGraphicsScene()
        # self.right_vert.addWidget(self.scene)

        # canvas = FigureCanvas(plt)
        # self.scene.addWidget(self.figure.canvas)
        self.vwGraph.setScene(self.scene)

        # self.right_vert.addStretch(1)

        self.setWidget(self.dockWidgetContents)
