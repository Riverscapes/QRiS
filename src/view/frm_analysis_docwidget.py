# -*- coding: utf-8 -*-
"""
/***************************************************************************
 QRiSDockWidget
                                 A QGIS plugin
 QGIS Riverscapes Studio (QRiS)
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2021-05-06
        git sha              : $Format:%H$
        copyright            : (C) 2021 by North Arrow Research
        email                : info@northarrowresearch.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os
from xmlrpc.client import Boolean

from qgis.core import QgsMapLayer
from qgis.gui import QgsDataSourceSelectDialog
from qgis.utils import iface
from qgis.PyQt.QtWidgets import QAbstractItemView, QFileDialog, QMenu, QMessageBox, QDockWidget
from qgis.PyQt.QtCore import pyqtSignal, Qt, QDate, pyqtSlot, QUrl
from qgis.PyQt.QtGui import QStandardItemModel, QStandardItem, QIcon, QDesktopServices

from ..model.layer import Layer
from ..model.project import Project
from ..model.event import Event
from ..model.event import EVENT_MACHINE_CODE
from ..model.basemap import BASEMAP_MACHINE_CODE, PROTOCOL_BASEMAP_MACHINE_CODE, Basemap
from ..model.mask import MASK_MACHINE_CODE
from ..model.analysis import ANALYSIS_MACHINE_CODE, Analysis
from ..model.db_item import DB_MODE_CREATE, DB_MODE_IMPORT, DBItem
from ..model.event import EVENT_MACHINE_CODE, Event
from ..model.basemap import BASEMAP_MACHINE_CODE, Basemap
from ..model.mask import MASK_MACHINE_CODE, Mask
from ..model.protocol import Protocol

from .ui.analysis_docwidget import Ui_AnalysisDocWidget

from ..QRiS.settings import Settings
from ..QRiS.method_to_map import build_basemap_layer, get_project_group, remove_db_item_layer, check_for_existing_layer
from ..QRiS.method_to_map import build_event_protocol_single_layer, build_basemap_layer, build_mask_layer

from .ui.qris_dockwidget import Ui_QRiSDockWidget

from ..gp.feature_class_functions import browse_source


class FrmAnalysisDocWidget(QDockWidget, Ui_AnalysisDocWidget):

    closingPlugin = pyqtSignal()

    def __init__(self, parent=None):

        super(FrmAnalysisDocWidget, self).__init__(parent)
        # Set up the user interface from Designer.
        # After setupUI you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://doc.qt.io/qt-5/designer-using-a-ui-file.html
        # widgets-and-dialogs-with-auto-connect
        self.setupUi(self)
